import { defineStore } from "pinia";
import {
  get_call_module,
} from "src/utilities/api_calls/module_calls";
import { storedUser } from "src/utilities/stored_user";

const user = storedUser();
const token = user?.token;
export const usePaymentStore = defineStore("payments", {
  state: () => ({
    all: [],
    unsuccPayments: [],
    succPayments: [],
    pendingPayments: [],
    amount: [],

  }),

  actions: {
    async fetchAllPayments() {
      if (token) {
        const res = await get_call_module("payments", token);
        this.all = res?.all;
        this.amount = res?.all;
        data.forEach(item => {
                    console.log("my amt", item.amount); // Accessing the 'name' key
                  });
        console.log("mydef new", res);
const amounts = data.map(item => item.amount); // Extracting all amounts
console.log("All amounts:", amounts);
        // return this.all;
        return {
          payments: this.all,
          amounts: this.amount
        };
      }
    },

    async fetchUnsuccessfulPayments() {
      if (token) {
        const res = await get_call_module("payments", token);
        this.unsuccPayments = res?.unsuccPayments;
        return this.unsuccPayments;
      }
    },
    async fetchSuccessfulPayments() {
      if (token) {
        const res = await get_call_module("payments", token);
        this.succPayments = res?.succPayments;
        return this.succPayments;
      }
    },

    async fetchPendingPayments() {
      if (token) {
        const res = await get_call_module("payments", token);
        this.pendingPayments = res?.pendingPayments;
        return this.pendingPayments;
      }
    },
    async fetchAmount() {
      if (token) {
        const res = await get_call_module("payments", token);
        console.log("my fr amount", this.amount);
        const data  = res?.amount;
        this.amount =  data.map(item => item.amount);

        console.log("mydef new", data);
const amounts = data.map(item => item.amount); // Extracting all amounts
console.log("All amounts:", amounts);
        return this.amount;
      }
    },
  },

  
});
// export const usePaymentStore = defineStore("payments", {
//   state: () => ({
//     payments: [],
//   }),

//   actions: {
//     async fetchPayments() {
//       if (token) {
//         const res = await get_call_module("payments", token);
//         // this.payments = res?.data;
//         // this.payments = res?.default_payments;
//         // this.payments = res?.default_payments;
//         const regularArray = [...this.payments];
//         this.payments = res;

//         console.log("rtyu ", this.payments);
//         console.log("rtyu me", res.default_payments);

//         // const { data } = res;
//         // data.forEach(item => {
//         //             console.log("my amt", item.amount); // Accessing the 'name' key
//         //           });
//         return this.payments;
//       }
//     },
//     // async fetchAmounts() {
//     //   await this.fetchPayments(); // Reuse fetchPayments action
//     //   const amountsArray = this.payments.map(item => parseFloat(item.amount));
//     //   console.log("Amounts array:", amountsArray);
//     //   return this.payments.map(item => parseFloat(item.amount));
//     // },
//   },
//   getters: {
//     amounts(state) {
//       return state.payments.map(item => parseFloat(item.amount));
//     },
//   },
// });
// export const usePaymentStore = defineStore("payments", {
//   state: () => ({
//     payments: [],
//   }),

//   actions: {
//     async fetchPayments(resultCode) {
//       if (token) {
//         console.log(resultCode);
//         const res = await get_call_module("payments", token, resultCode);
//         this.payments = res?.data;
//         console.log("rtyu ", res);
//         const { data } = res;
//         data.forEach(item => {
//           console.log("my amt", item.amount); // Accessing the 'name' key
//         });
//         return this.payments;
//       }
//       else {
//         console.log("token error");
//       }
//     },
//   },
// });